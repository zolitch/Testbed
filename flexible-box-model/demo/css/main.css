/*
Properties to test:
(via <http://www.html5rocks.com/tutorials/flexbox/quick/>)

Parent properties:
--------------------------

+ display: box
	- This new value for the display style opts this element and its immediate children into the flexible box model.
	  The flexbox model works only with immediate children.

+ box-orient
	- How should the box's children be aligned?
	- Values:
		+ horizonal (default)
		- vertical
		- inherit
		+ inline-axis (maps to horizontal)
		- block-axis (maps to vertical)

+ box-align
	- Basically box-pack's brother property.
	  Sets how the box's children are aligned in the box.
	  If the orientation is horizontal it will decide the alignment vertically and vice-versa.
	- Values:
		+ stretch (default)
		+ start
		+ end
		+ center
		- baseline

+ box-direction
	- Children within a horizontally oriented box are, by default, displayed from left to right in the same
	  order as they appear in the source document. Children within a vertically oriented box are displayed
	  top to bottom in the same order. The box-direction and box-ordinal-group properties may be used to
	  change this ordering.
	- Values:
		+ normal (default)
		+ reverse
		- inherit

+ box-pack
	- Sets the alignment of the box along the box-orient axis.
  	  So if box-orient is horizontal it will chose how the box's children are aligned horizontally, and vice-versa.
	- Values:
		+ start (default)
		+ end
		+ center
		+ justify

Child properties:
--------------------------
+ box-flex
	- The flexibility ratio for this child.
	  If a child had 1 and its sibling had 2, any additional space in the parent box would be consumed
	  twice as much by the sibling. It defaults to 0 which is inflexible.
	- Values:
		- 0 (default)
		- Any integer

box-ordinal-group
	-
	- Values:
		- 1 (default)
		- Any integer

??? properties:
--------------------------
box-flex-group
box-lines

*/

/* Demo Styling. Pay no attention to the CSS behind the box */

/* Demo Styling */

@import url("reset.css");
@import url("brand.css");

body, html {
}
.container{
}
#main{
	position: relative;
}
	.left-nav{
	}
		.left-nav ul{
		}
			.left-nav ul li{
				display:inline-block;
			}
				.left-nav ul li a{
					 padding:5px; background:#65AA3C; 
					 display:block; float:left;
				}
				.left-nav ul li a:hover{
					color:#fff;
				}

#footer{
	position: relative;

}



/*styles for 300px and up!*/
@media screen and (min-width: 300px) {
	.container{
		width:80%; margin:0 auto;
	}
}

/*styles for 600px and up!*/

@media screen and (min-width: 600px) {

	#main {
		background:#aaa;
		width:100%;
		/* Display Box */
		display: -moz-box;
		display: -webkit-box;
		display: -ms-box;
		display: box;
		
		-webkit-box-orient: horizontal;
		-moz-box-orient: horizontal;
		-ms-box-orient: horizontal;
		box-orient: horizontal;
		-webkit-box-align: stretch;
		-moz-box-align: stretch;
		-ms-box-align: stretch;
		box-align: stretch;
		/*	
		-webkit-box-pack: justify;
		-moz-box-pack: justify;
		-ms-box-pack: justify;
		box-pack: justify;*/
	}
		#main div{
			padding:16px;
		}
		.left-nav{
			background:#bbb;
			width:250px;
		}
		.left-nav ul{
		}
			.left-nav ul li{
			}
				.left-nav ul li a{
				}
	
		.content{
			background:#ddd;
			-webkit-box-flex: 1;
			-moz-box-flex: 1;
			box-flex: 1;
			width:50%;
		}
		.aside{
			background:#bbb;
			width:300px;
		}
	#footer{
	
		/* Display Box */
		/*
		display: -moz-box;
		display: -webkit-box;
		display: -ms-box;
		display: box;
		*/
		
	/*	-webkit-box-align: start;
		-moz-box-align: start;
		-ms-box-align: start;
		box-align: start;
		
		-webkit-box-align: stretch;
		-moz-box-align: stretch;
		-ms-box-align: stretch;
		box-align: stretch;
		
		-webkit-box-pack: justify;
		-moz-box-pack: justify;
		-ms-box-pack: justify;
		box-pack: justify;*/
	}
}